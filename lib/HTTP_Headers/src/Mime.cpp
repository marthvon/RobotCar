#include "Mime.h"

static const String get_MIME_type(FILE_TYPE ft) {
    switch(ft) {
        case(FILE_TYPE::BINARY): return "application/octet-stream"; 
        case(FILE_TYPE::MARKUP_HTML): return "text/html"; 
        case(FILE_TYPE::MARKUP_CSS): return "text/css"; 
        case(FILE_TYPE::MARKUP_XML): return "application/xml"; 
        case(FILE_TYPE::MARKUP_MARKDOWN): return "text/markdown"; 
        case(FILE_TYPE::MARKUP_XHTML): return "application/xhtml+xml"; 
        case(FILE_TYPE::MARKUP_XUL): return "application/vnd.mozilla.xul+xml";
        case(FILE_TYPE::TEXT_PLAIN): return "text/plain"; 
        case(FILE_TYPE::TEXT_RTF): return "application/rtf"; 
        case(FILE_TYPE::TEXT_PDF): return "application/pdf"; 
        case(FILE_TYPE::TEXT_WORD): return "application/msword"; 
        case(FILE_TYPE::TEXT_WORD_XML): return "application/vnd.openxmlformats-officedocument.wordprocessingml.document"; 
        case(FILE_TYPE::TEXT_EPUB): return "application/epub+zip"; 
        case(FILE_TYPE::TEXT_OPEN_WORD): return "application/vnd.oasis.opendocument.text"; 
        case(FILE_TYPE::TEXT_ABIWORD): return "application/x-abiword"; 
        case(FILE_TYPE::TEXT_AMAZON_KINDLE): return "application/vnd.amazon.ebook";
        case(FILE_TYPE::GRAPHICS_JPEG): return "image/jpeg"; 
        case(FILE_TYPE::GRAPHICS_PNG): return "image/png"; 
        case(FILE_TYPE::GRAPHICS_ICON): return "image/vnd.microsoft.icon"; 
        case(FILE_TYPE::GRAPHICS_GIF): return "image/gif"; 
        case(FILE_TYPE::GRAPHICS_WEBP): return "image/webp"; 
        case(FILE_TYPE::GRAPHICS_TIFF): return "image/tiff"; 
        case(FILE_TYPE::GRAPHICS_SVG): return "image/svg+xml"; 
        case(FILE_TYPE::GRAPHICS_BMP): return "image/bmp"; 
        case(FILE_TYPE::GRAPHICS_AVIF): return "image/avif"; 
        case(FILE_TYPE::GRAPHICS_VISIO): return "application/vnd.visio"; 
        case(FILE_TYPE::GRAPHICS_CALENDAR): return "text/calendar";
        case(FILE_TYPE::AUDIO_MP3): return "audio/mpeg"; 
        case(FILE_TYPE::AUDIO_WAV): return "audio/wav"; 
        case(FILE_TYPE::AUDIO_AAC): return "audio/aac"; 
        case(FILE_TYPE::AUDIO_OGG): return "audio/ogg"; 
        case(FILE_TYPE::AUDIO_OGX): return "application/ogg"; 
        case(FILE_TYPE::AUDIO_WEBM): return "audio/webm"; 
        case(FILE_TYPE::AUDIO_MIDI): return "audio/midi"; 
        case(FILE_TYPE::AUDIO_XMIDI): return "audio/x-midi";
        case(FILE_TYPE::AUDIO_3GPP): return "audio/3gpp"; 
        case(FILE_TYPE::AUDIO_3GPP2): return "audio/3gpp2";
        case(FILE_TYPE::AUDIO_OPUS): return "audio/opus"; 
        case(FILE_TYPE::AUDIO_CD): return "application/x-cdf";
        case(FILE_TYPE::VIDEO_MP4): return "video/mp4"; 
        case(FILE_TYPE::VIDEO_MPEG): return "video/mpeg"; 
        case(FILE_TYPE::VIDEO_WEBM): return "video/webm"; 
        case(FILE_TYPE::VIDEO_AVI): return "video/x-msvideo"; 
        case(FILE_TYPE::VIDEO_OGG): return "video/ogg"; 
        case(FILE_TYPE::VIDEO_TS): return "video/mp2t"; 
        case(FILE_TYPE::VIDEO_3GPP): return "video/3gpp"; 
        case(FILE_TYPE::VIDEO_3GPP2): return "video/3gpp2";
        case(FILE_TYPE::STORAGE_CSV): return "text/csv"; 
        case(FILE_TYPE::STORAGE_JSON): return "application/json"; 
        case(FILE_TYPE::STORAGE_JSONLD): return "application/ld+json"; 
        case(FILE_TYPE::STORAGE_EXCEL): return "application/vnd.ms-excel"; 
        case(FILE_TYPE::STORAGE_EXCEL_XML): return "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"; 
        case(FILE_TYPE::STORAGE_OPEN_SPREADSHEET): return "application/vnd.oasis.opendocument.spreadsheet";
        case(FILE_TYPE::COMPRESSED_FILE_ZIP): return "application/zip"; 
        case(FILE_TYPE::COMPRESSED_FILE_RAR): return "application/vnd.rar"; 
        case(FILE_TYPE::COMPRESSED_FILE_TAR): return "application/x-tar"; 
        case(FILE_TYPE::COMPRESSED_FILE_ARCHIVE): return "application/x-freearc"; 
        case(FILE_TYPE::COMPRESSED_FILE_7ZIP): return "application/x-7z-compressed"; 
        case(FILE_TYPE::COMPRESSED_FILE_GZIP): return "application/gzip"; 
        case(FILE_TYPE::COMPRESSED_FILE_BZIP): return "application/x-bzip"; 
        case(FILE_TYPE::COMPRESSED_FILE_BZIP2): return "application/x-bzip2"; 
        case(FILE_TYPE::COMPRESSED_FILE_APPLE_INSTALLER): return "application/vnd.apple.installer+xml";
        case(FILE_TYPE::SCRIPTS_JAVASCRIPT): return "text/javascript"; 
        case(FILE_TYPE::SCRIPTS_JAVASCRIPT_MODULE): return "text/javascript"; 
        case(FILE_TYPE::SCRIPTS_PHP): return "application/x-httpd-php"; 
        case(FILE_TYPE::SCRIPTS_JAVA_ARCHIVE): return "application/java-archive"; 
        case(FILE_TYPE::SCRIPTS_BOURNE_SHELL): return "application/x-sh"; 
        case(FILE_TYPE::SCRIPTS_C_SHELL): return "application/x-csh";
        case(FILE_TYPE::FONTS_TRUETYPE): return "font/ttf"; 
        case(FILE_TYPE::FONTS_WOFF): return "font/woff"; 
        case(FILE_TYPE::FONTS_WOFF2): return "font/woff2"; 
        case(FILE_TYPE::FONTS_OPENFONT): return "font/otf"; 
        case(FILE_TYPE::FONTS_OPENFONT_EMBEDDED): return "application/vnd.ms-fontobject ";
        case(FILE_TYPE::MULTIMEDIA_POWERPOINT): return "application/vnd.ms-powerpoint"; 
        case(FILE_TYPE::MULTIMEDIA_POWERPOINT_XML): return "application/vnd.openxmlformats-officedocument.presentationml.presentation"; 
        case(FILE_TYPE::MULTIMEDIA_OPEN_PRESENTATION): return "application/vnd.oasis.opendocument.presentation ";    
    }
}